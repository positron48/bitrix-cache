# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/PHP.gitlab-ci.yml

# Select image from https://hub.docker.com/_/php/
image: php:8.2

# Select what we should cache between builds
cache:
  paths:
    - vendor/

before_script:
  - apt-get update -yqq
  - apt-get install -yqq git libpq-dev libcurl4-gnutls-dev libicu-dev libvpx-dev libjpeg-dev libpng-dev libxpm-dev zlib1g-dev libfreetype6-dev libxml2-dev libexpat1-dev libbz2-dev libgmp3-dev libldap2-dev unixodbc-dev libsqlite3-dev libaspell-dev libsnmp-dev libpcre3-dev libtidy-dev libonig-dev libzip-dev
  # Install PHP extensions
  - docker-php-ext-install mbstring curl intl xml zip bz2 opcache
  # Install & enable Xdebug for code coverage reports
  - pecl install xdebug
  - docker-php-ext-enable xdebug curl intl xml zip bz2 opcache
  # Install and run Composer
  - curl -sS https://getcomposer.org/installer | php
  - php composer.phar install --no-progress --no-suggest --no-interaction --no-cache

# Set any variables we need
variables:
  XDEBUG_MODE: coverage
  # php-cs-fixer still has no native php8.2 support
  PHP_CS_FIXER_IGNORE_ENV: 1

# Run our tests
# If Xdebug was installed you can generate a coverage report and see code coverage metrics.
test:
  only:
    - master
  script:
    - /bin/bash dev-tools/php-cs-check.sh
    - php composer.phar check:analyse
    - php vendor/bin/phpunit --configuration phpunit.xml.dist --coverage-text --colors=never

  coverage: '/^\s*Lines:\s*\d+.\d+\%/'